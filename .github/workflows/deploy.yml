name: Deploy to LWS cPanel

on:
   push:
      branches: [deploy]

jobs:
   build-and-deploy:
      runs-on: ubuntu-latest

      steps:
         - name: Checkout repository
           uses: actions/checkout@v4

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: '20'
              cache: 'npm'

         - name: Install Dependencies
           run: |
              npm ci
              npm i sharp@latest

         - name: Generate Prisma Client
           run: npx prisma generate

         - name: Build Application
           env:
              DATABASE_URL: ${{ secrets.DATABASE_URL }}
              # Add other environment variables here
           run: npm run build

         - name: Prepare Deployment Files
           run: |
              # Create deployment structure
              mkdir -p deployment/quiz

              # Copy standalone server and dependencies
              cp -r .next/standalone/* deployment/quiz/

              # Copy static files and public assets
              mkdir -p deployment/quiz/.next/static
              cp -r .next/static deployment/quiz/.next/
              cp -r public deployment/quiz/

              # Copy Prisma files
              mkdir -p deployment/quiz/prisma
              cp prisma/schema.prisma deployment/quiz/prisma/

              # Create PHP entry point for LWS
              cat > deployment/quiz/index.php << 'EOL'
              <?php
              header("Location: /quiz/_next/server");
              exit();
              EOL

              # Create optimized .htaccess for LWS
              cat > deployment/quiz/.htaccess << 'EOL'
              RewriteEngine On
              RewriteBase /quiz

              # Allow direct access to static files
              RewriteCond %{REQUEST_URI} ^/quiz/_next/static/(.*)$
              RewriteRule ^_next/static/(.*)$ .next/static/$1 [L]

              # Handle Node.js application
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteRule ^(.*)$ http://localhost:3001/$1 [P,L]

              # Handle errors
              ErrorDocument 404 /quiz/_next/server
              ErrorDocument 500 /quiz/_next/server

              # Security headers for Cloudflare compatibility
              Header set Access-Control-Allow-Origin "*"
              Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
              Header set Access-Control-Allow-Headers "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type"
              EOL

              # Make server.js executable
              chmod +x deployment/quiz/server.js

         - name: FTP Deploy
           uses: SamKirkland/FTP-Deploy-Action@v4.3.4
           with:
              server: ftp.lws.fr # LWS FTP server
              username: ${{ secrets.FTP_USERNAME }}
              password: ${{ secrets.FTP_PASSWORD }}
              local-dir: deployment/quiz/
              server-dir: /quiz/
              exclude: |
                 **/.git*
                 **/.git*/**
                 **/node_modules/**
                 README.md
                 .env*
